FORMAT: 1A
HOST: https://api.mywebsite.com

# InfinitAuth
A REST Auth API Provider 

## SetUp the App
The app was configured by environnement variable. This is the list you need.

* SECRET *A secret passphrase, used to create Token*
* MONGO_ADDR *Address of Mongo Database*
* MONGO_PORT *Port of Mongo Database*
* MONGO_DATABASE *The name of the database who the app store data*
* port *Port number for listening, default set to 3000*

To create these variable, you have to run on your console, for example on linux:

```bash
export MONGO_ADDR=localhost
```


# Group Auth
Authenticate a user and return him token

## Authentification [/auth]

### Authenticate a user [POST]

+ Request with body (application/json)

    + Body

            {
                "username": "Awkwas",
                "password": "MySup3rCryptedP@ss0rd"
            }

+ Response 201 (application/json)

    + Body 

            {
                "success" : true,
                "message" : "Authentification complete",
                "token" : "Token Value"
            }

+ Response 400 (application/json)

    + Body

            {
                "success": false,
                "message": "Authentication failed. Username and password does not match."
            }


# Group Account
CRUD method for account properties

## CRUD Account [/account]

You may have a valid token for using this path.


### Retrieve account information [GET]
        
    {
        Authorization: Bearer JWT
    }


+ Response 206 (application/json)

    + Body

            {
                "username" : "Awkwas",
                "firstname" : "Gerda",
                "lastname" : "Fairbairn",
                "email" : "GerdaFairbairn@armyspy.com",
                "createdAt": "2016-10-15T20:14:52.148Z",
                "modifiedAt": "2016-10-18T22:13:34.518Z",
                "emailVerified": "true",
                "loginAttempts": "0"
            }
+ Response 404 (application/json)

    + Body

            {
                "message" : "No data found"
            }

+ Response 401 (application/json)

    + Body

            {
                "status": 401,
                "code": 401,
                "message": "Authentication required.",
                "developerMessage": "Authentication with a valid API Key is required."
            }

### Create new account [PUT]

    {
        "username": "Awkwas",
        "firstname": "Gerda",
        "lastname": "Fairbairn",
        "email": "GerdaFairbairn@armyspy.com",
        "accounts": {
            "kind": "internal",
            "password": "challangepassword"
        }
    }

+ Response 201 (application/json)

    + Body

            {
                "message" : "Your account was created"
            }

+ Response 400 (application/json)

    + Body

            {
                "message" : "an error occured, your request can not be processed"
            }

+ Response 405 (application/json)

    + Body

            {
                "message" : "You have to send account data";
            }

+ Response 409 (application/json)

    + Body

            {
                "message" : "This user account already exist"
            }

### Update account information [PATCH]

    {
        Authorization: Bearer JWT
    }

+ Request with body (application/json)

    You can send any key / value to update your account, except username and _id

    + Body

            {
                "email": "GerdaFairbairn@armyspy.org"
            }

+ Response 204

+ Response 405 (application/json)

    + Body

            {
                "message" : "Your not allowed to update this resource"
            }


### Delete my account [DELETE]

    {
        Authorization: Bearer JWT
    }

+ Response 204

+ Response 404 (application/json)

    + Body

            {
                "message" : "This resource doesn't exist anymore, please delete your token";
            }